version: 2.1
parameters:
  repo:
    type: string
    default: rsksmart/rskj
  tag:
    type: string
    default: IRIS-3

commands:
  prepare:
    description: Prepare enveloping and rskj apps
    steps:
      - checkout
      - setup_remote_docker

  pre-checks:
    description: Execute lint and tsc
    steps:
      - run:
          name: TSC
          command: yarn tsc
      - run:
          name: Lint
          command: yarn run lint

  prepare_wo_rskj:
    description: Prepare enveloping and rskj apps
    steps:
      - checkout
      - restore_cache:
          key: 'dependency-cachev4-{{ checksum "package.json" }}-yarn2'
      - run:
          name: yarn-install
          command: yarn

  run_rskj_node:
    description: Create network and Run RSKJ Container Image on Remote Docker
    steps:
      - run:
          name: Run RSKJ Container Image
          command: |
            docker network create rif-relay-testing
            docker create -v /cfg --name files node:12.18.3 /bin/true
            docker cp $PWD files:/cfg
            docker run --volumes-from files -d -p 4444:4444 -p 4445:4445 \
                --network rif-relay-testing --name enveloping-rskj -it \
                --entrypoint "" << pipeline.parameters.repo >>:<< pipeline.parameters.tag >>  java -cp rsk.jar \
                -Dlogback.configurationFile=/cfg/project/rsknode/logback.xml \
                -Drsk.conf.file=/cfg/project/rsknode/node.conf co.rsk.Start \
                --regtest
            docker run --rm --network rif-relay-testing jwilder/dockerize -wait tcp://enveloping-rskj:4444 -timeout 1m
            docker run --volumes-from files --network rif-relay-testing -w /cfg/project node:12.18.3 yarn

  run_rskj_test:
    description: Execute the parameter test against RSKj node
    parameters:
      test:
        type: string
    steps:
      - run:
          name: Execute << parameters.test >>
          command: |
            docker run --volumes-from files \
                --network rif-relay-testing -w /cfg/project node:12.18.3 \
                npx truffle test --network rskdocker << parameters.test >>

jobs:
  Lint_Tsc:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare_wo_rskj
      - pre-checks

  Test_Thread_1:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare
      - run_rskj_node
      - run_rskj_test:
          test: test/Verifiers.test.ts
      - run_rskj_test:
          test: test/RelayHubPenalizations.test.ts
      - run_rskj_test:
          test: test/RelayHubRegistrationsManagement.test.ts
      - run_rskj_test:
          test: test/TxStoreManager.test.ts
      - run_rskj_test:
          test: test/Utils.test.ts
      - run_rskj_test:
          test: test/common/VersionManager.test.ts
      - run_rskj_test:
          test: test/regressions/PayableWithEmit.test.ts
      - run_rskj_test:
          test: test/relayclient/AccountManager.test.ts
      - run_rskj_test:
          test: test/relayclient/ContractInteractor.test.ts
      - run_rskj_test:
          test: test/relayclient/Configurator.test.ts

  Test_Thread_2:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare
      - run_rskj_node
      - run_rskj_test:
          test: test/relayclient/RelaySelectionManager.test.ts
      - run_rskj_test:
          test: test/relayserver/RelayServerRequestsProfiling.test.ts
      - run_rskj_test:
          test: test/relayserver/ServerConfigParams.test.ts
      - run_rskj_test:
          test: test/relayserver/TransactionManager.test.ts
      - run_rskj_test:
          test: test/relayclient/KnownRelaysManager.test.ts
      - run_rskj_test:
          test: test/smartwallet/SmartWallet.test.ts
      - run_rskj_test:
          test: test/smartwallet/CustomSmartWallet.test.ts

  Test_Thread_3:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare
      - run_rskj_node
      - run_rskj_test:
          test: test/SampleRecipient.test.ts
      - run_rskj_test:
          test: test/StakeManagement.test.ts
      - run_rskj_test:
          test: test/RSKAddressValidator.test.ts
      - run_rskj_test:
          test: test/EnvelopingUtils.test.ts
      - run_rskj_test:
          test: test/relayclient/SmartWalletDiscovery.test.ts

  Test_Thread_4:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare
      - run_rskj_node
      - run_rskj_test:
          test: test/Flows.test.ts
      - run_rskj_test:
          test: test/TestEnvironment.test.ts
      - run_rskj_test:
          test: test/HttpWrapper.test.ts
      - run_rskj_test:
          test: test/KeyManager.test.ts
      - run_rskj_test:
          test: test/WalletFactory.test.ts
  
  Test_Thread_5:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare
      - run_rskj_node
      - run_rskj_test:
          test: test/relayclient/RelayClient.test.ts
      - run_rskj_test:
          test: test/relayserver/NetworkSimulation.test.ts
      - run_rskj_test:
          test: test/relayserver/RegistrationManager.test.ts
      - run_rskj_test:
          test: test/relayserver/RelayServer.test.ts
      - run_rskj_test:
          test: test/relayserver/RelayServer.webpack.test.ts

  Test_Thread_6:
    docker:
      - image: 'cimg/node:12.18.3'
    steps:
      - prepare
      - run_rskj_node
      - run_rskj_test:
          test: test/VersionRegistry.test.ts
      - run_rskj_test:
          test: test/RelayHub.test.ts
      - run_rskj_test:
          test: test/relayclient/RelayProvider.test.ts
      - run_rskj_test:
          test: test/relayclient/RelaySelectionManager.test.ts

workflows:
  commit:
    jobs:
      - Lint_Tsc
      - Test_Thread_1
      - Test_Thread_2
      - Test_Thread_3
      - Test_Thread_4
      - Test_Thread_5
      - Test_Thread_6
